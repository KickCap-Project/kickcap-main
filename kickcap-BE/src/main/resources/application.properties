spring.application.name=kickcap

# PostgreSQL
spring.datasource.url=${dburl}
spring.datasource.username=${username}
spring.datasource.password=${password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Redis
spring.data.redis.host=${redis-host}
spring.data.redis.port=${redis-port}

spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#springdoc.api-docs.path=/v3/api-docs # OpenAPI \uAE30\uBCF8 \uACBD\uB85C \uC124\uC815
# springdoc.swagger-ui.path=/swagger-ui.html  # \uC774 \uC904\uC744 \uC0AD\uC81C\uD558\uAC70\uB098 \uC8FC\uC11D \uCC98\uB9AC\uD569\uB2C8\uB2E4.


## GOOGLE OAUTH
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
##spring.security.oauth2.client.registration.google.scope=email,profile,https://www.googleapis.com/auth/user.phonenumbers
#spring.security.oauth2.client.registration.google.scope=email,profile,https://www.googleapis.com/auth/user.phonenumbers.read
#spring.security.oauth2.client.registration.google.redirect-uri=${BASE_URL}/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.google.client-name=Google
#
## Google Provider
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=${BASE_URL}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope= account_email, name, phone_number
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# Kakao Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-info-authentication-method=header
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${BASE_URL}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=profile, email
spring.security.oauth2.client.registration.naver.client-name=Naver

# Naver Provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=id

# JWT
jwt.secret_key=${BASE64_SECRET_KEY}

redirect_uri=${redirect_uri}