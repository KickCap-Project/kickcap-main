spring.application.name=kickcap

# PostgreSQL \uC124\uC815
spring.datasource.url=${dburl}
spring.datasource.username= ${username}
spring.datasource.password= ${password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Redis \uC124\uC815
spring.data.redis.host=${redis-host}
spring.data.redis.port=${redis-port}

spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

# JPA \uC124\uC815
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# GOOGLE OAUTH \uC124\uC815
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=${BASE_URL}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google

# Google Provider 설정
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# JWT \uC0DD\uC131 \uBE44\uBC00\uD0A4 \uC124\uC815
jwt.secret_key=${BASE64_SECRET_KEY}
